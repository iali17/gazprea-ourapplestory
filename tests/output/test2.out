; ModuleID = 'gazprea'
source_filename = "gazprea"

@intFormatStr = global [3 x i8] c"%d\00"
@charFormatStr = global [3 x i8] c"%c\00"
@floatFormatStr = global [3 x i8] c"%f\00"
@spaceStr = global [2 x i8] c" \00"
@eolnStr = global [2 x i8] c"\0A\00"
@openSqrBStr = global [2 x i8] c"[\00"
@closeSqrBStr = global [2 x i8] c"]\00"

declare i32 @printf(i8* noalias nocapture, ...)

declare void @free(i8*)

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #0

declare i32 @scanf(i8*, ...)

define i32 @main() {
entry:
  %0 = alloca i1
  store i1 true, i1* %0
  %1 = alloca i32
  store i32 58, i32* %1
  %2 = alloca i8
  store i8 97, i8* %2
  %3 = alloca float
  store float 9.700000e+01, float* %3
  %4 = load i32, i32* %1
  %intToChar = trunc i32 %4 to i8
  %5 = alloca i8
  store i8 %intToChar, i8* %5
  %6 = load i8, i8* %2
  %charToInt = sext i8 %6 to i32
  %7 = alloca i32
  store i32 %charToInt, i32* %7
  %8 = load float, float* %3
  %realToInt = fptosi float %8 to i32
  %9 = alloca i32
  store i32 %realToInt, i32* %9
  %10 = load i1, i1* %0
  %charToReal = sitofp i1 %10 to float
  %11 = alloca float
  store float %charToReal, float* %11
  %12 = load i32, i32* %1
  %intToReal = sitofp i32 %12 to float
  %13 = alloca float
  store float %intToReal, float* %13
  %14 = load i8, i8* %2
  %charToReal1 = sitofp i8 %14 to float
  %15 = alloca float
  store float %charToReal1, float* %15
  %16 = load i1, i1* %0
  %17 = zext i1 %16 to i32
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @intFormatStr, i32 0, i32 0), i32 %17)
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %20 = load i32, i32* %1
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @intFormatStr, i32 0, i32 0), i32 %20)
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %23 = load i8, i8* %2
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @charFormatStr, i32 0, i32 0), i8 %23)
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %26 = load float, float* %3
  %27 = fpext float %26 to double
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @floatFormatStr, i32 0, i32 0), double %27)
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %30 = load i8, i8* %5
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @charFormatStr, i32 0, i32 0), i8 %30)
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %33 = load i32, i32* %7
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @intFormatStr, i32 0, i32 0), i32 %33)
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %36 = load i32, i32* %9
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @intFormatStr, i32 0, i32 0), i32 %36)
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %39 = load float, float* %11
  %40 = fpext float %39 to double
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @floatFormatStr, i32 0, i32 0), double %40)
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %43 = load float, float* %13
  %44 = fpext float %43 to double
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @floatFormatStr, i32 0, i32 0), double %44)
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %47 = load float, float* %15
  %48 = fpext float %47 to double
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @floatFormatStr, i32 0, i32 0), double %48)
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @eolnStr, i32 0, i32 0))
  %51 = load i32, i32* %7
  ret i32 %51
}

attributes #0 = { nounwind }
